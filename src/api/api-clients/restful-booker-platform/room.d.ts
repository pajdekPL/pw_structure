/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getRoom"];
    put: operations["updateRoom"];
    post?: never;
    delete: operations["deleteRoom"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getRooms"];
    put?: never;
    post: operations["createRoom"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Room: {
      /** Format: int32 */
      roomid?: number;
      roomName: string;
      type: string;
      accessible?: boolean;
      image?: string;
      description?: string;
      features?: string[];
      /** Format: int32 */
      roomPrice?: number;
    };
    Rooms: {
      rooms?: components["schemas"]["Room"][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  getRoom: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: Record<string, unknown>;
        content: {
          "*/*": string;
        };
      };
    };
  };
  updateRoom: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: number;
      };
      cookie?: {
        token?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Room"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: Record<string, unknown>;
        content: {
          "*/*": components["schemas"]["Room"];
        };
      };
    };
  };
  deleteRoom: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: number;
      };
      cookie?: {
        token?: string;
      };
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: Record<string, unknown>;
        content: {
          "*/*": string;
        };
      };
    };
  };
  getRooms: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: Record<string, unknown>;
        content: {
          "*/*": components["schemas"]["Rooms"];
        };
      };
    };
  };
  createRoom: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: {
        token?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Room"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: Record<string, unknown>;
        content: {
          "*/*": components["schemas"]["Room"];
        };
      };
    };
  };
}
